<?xml version="1.0" encoding="UTF-8"?>
<dynaForm name="processes_New" width="400px" labelWidth="40%" menu="setup/mailConnectionTest_Events">
	
<THETITLE type="title" group="1">
  <en>Configuration</en>
</THETITLE>

<MESS_ENABLED type="checkbox" value="1">
  <en>Enable Email Notifications</en>
</MESS_ENABLED>

<MESS_ENGINE type="dropdown">
  <en>Email Engine
    <option name="MAIL">Mail (PHP)</option>
    <option name="PHPMAILER">SMTP (PHPMailer)</option>
    <option name="OPENMAIL">SMTP (OpenMail)</option>
  </en>
</MESS_ENGINE>

<MESS_SERVER type="text" size="25" maxlength="100" required="true">
  <en>Server</en>
</MESS_SERVER>

<MESS_PORT type="text" size="5" maxlength="5" validate="Int">
  <en>Port</en>
</MESS_PORT>

<MESS_ACCOUNT type="text" size="25" maxlength="25" validate="Email">
  <en>Account</en>
</MESS_ACCOUNT>

<MESS_PASSWORD type="password" size="25" maxlength="25">
  <en>Password</en>
</MESS_PASSWORD>

<MESS_BACKGROUND type="checkbox" value="1">
  <en>Run in the background</en>
</MESS_BACKGROUND>

<MESS_EXECUTE_EVERY type="text" size="5" maxlength="5" required="true" validate="Int" defaultValue="5">
  <en>Execute every (in minutes)</en>
</MESS_EXECUTE_EVERY>

<MESS_SEND_MAX type="text" size="5" maxlength="5" required="true" validate="Int" defaultValue="50">
  <en>Maximun number of mails sended by attempt</en>
</MESS_SEND_MAX>

<MESS_TRY_SEND_INMEDIATLY type="checkbox" value="1">
  <en>Try send mails inmediatly</en>
</MESS_TRY_SEND_INMEDIATLY>

<TEST type="button" onclick="javascript:testConnection();">
  <en>Test</en>
</TEST>

<SAVE_CHANGES type="button" onclick="javascript:verifyData(this.form);">
  <en>Save Changes</en>
</SAVE_CHANGES>

<JS type="javascript">
<![CDATA[

/***we disable the save button***/
getField('SAVE_CHANGES').disabled = true;
//verifyData(this.form);
//testEmailConfiguration();

/* @#init *************************************  test Connectio Events ***********************************
*  @author: Erik Amaru Ortiz <erik@colosa.com>
**********************************************************************************************************/
var PROCESS_REQUEST_FILE = '../setup/setupAjax';

var oPanel;
var srv;
var port;
var account;
var passwd;
	
function testConnection() {
	/***get in the connection parameters***/
	resultset = true;
	srv		= $('form[MESS_SERVER]').value;
	port	= $('form[MESS_PORT]').value;
	if(port== '') port='default';
	account = $('form[MESS_ACCOUNT]').value;
	passwd	= $('form[MESS_PASSWORD]').value;

	var uri = 'srv='+srv+'&port='+port+'&account='+account+'&passwd='+passwd;
	
	oPanel = new leimnud.module.panel();
	oPanel.options = {
		size	:{w:580,h:390},
		position:{x:0,y:0,center:true},
		title	: 'SMTP Server Connection',
		theme	:"processmaker",
		statusBar:false,
		control	:{resize:false,roll:false,drag:true},
		fx	:{modal:true,opacity:true,blinkToFront:false,fadeIn:false,drag:true}
	};
	oPanel.events = {
		remove: function() { delete(oPanel); }.extend(this)
	};
	oPanel.make();
	oPanel.loader.show();
	var oRPC = new leimnud.module.rpc.xmlhttp({
		url : PROCESS_REQUEST_FILE,
		args: 'request=mailTest_Show'+'&'+uri
	});
	oRPC.callback = function(rpc) {
		oPanel.loader.hide();
		oPanel.addContent(rpc.xmlhttp.responseText);
		//$('form[CREATE]').disabled = true;
		//here execute de init test
		testSMTPHost(1);
	}.extend(this);
	oRPC.make();
};

var resultset = true;
function testSMTPHost(step)
{
	$("test_"+step).style.display = "block";
	
	var requestfile = PROCESS_REQUEST_FILE;
	var uri = 'request=testConnection&step='+step+'&srv='+srv+'&port='+port+'&account='+account+'&passwd='+passwd;
	
	var ajax = AJAX();
	ajax.open("POST", requestfile, true);
	ajax.setRequestHeader("Content-Type", "application/x-www-form-urlencoded;");
	ajax.onreadystatechange = function() { 
		if(ajax.readyState == 4) {
			try{
				response = ajax.responseText.trim();
				oresp = response.split(',');
				result = oresp[0].trim();
				msg = oresp[1].trim();
				if( result == 'SUCCESSFULL' ) {
					$('status_'+step).innerHTML = '';
					if(msg != '') {
						$('status_'+step).innerHTML = '<img src="/images/row_down.png" width="15" height="11" align="left" border="0"/><b>Server Response: <font color=#000>'+msg+'</b></font><br/>';
					}
					$('status_'+step).innerHTML += '<img src="/images/ok.png" width="13" height="13" align="left" border="0"/><b>The test was <font color="#749AF9">Successful</b></font>';
				}
				else {
					if( result == 'FAILED' ) {
						$('status_'+step).innerHTML = '<img src="/images/alert.gif" width="12" height="12" align="left" border="0"/><b>The Server response was <font color=red>'+msg+'</b></font><br/>';
						$('status_'+step).innerHTML += '<img src="/images/cross.gif" width="12" height="12" align="left" border="0"/><b>The test was <font color=red> Failed!</b></font>';
						resultset = false;
					} else {
						alert(response);
					}
				}
				step += 1;
				testSMTPHost(step);
			} catch (e) {
				if(resultset){
					$('form[SAVE_CHANGES]').disabled = false;
				}
				else {
					$('form[SAVE_CHANGES]').disabled = true;
				} 
				$('bnt_ok').style.display = 'block';
				return;
			};
		} else {	
			var html = "<center><img src='/images/activityanimation.gif'><br/>"+G_STRINGS.DBCONNECTIONS_MSG3+"....</center>"; //
		    $('status_'+step).innerHTML = html;
		}
	}
	ajax.send(uri);
}

function cancelTestConnection()
{
	oPanel.remove();
	if(resultset) {
		new leimnud.module.app.confirm().make({
			label:'Do you send a test mail with this configuration?',
			action:function(){
				testEmailConfiguration();
			}.extend(this)
		});
	}
	resultset = true;
}

///************* Adds routines *************///
String.prototype.trim = function() {
	return this.replace(/^\s+|\s+get/g,"");
}
function $(id) {
	return document.getElementById(id);
}
function AJAX() 
{
	try	{
		xmlhttp = new XMLHttpRequest();
	} 
	catch(generic_error) {
		try {
			xmlhttp = new ActiveXObject("Msxml2.XMLHTTP");
		} catch (microsoft_old_error) {
			try {
				xmlhttp = new ActiveXObject("Microsoft.XMLHTTP");
			} catch (microsoft_error) {
				xmlhttp = false;
			}
		}
	}
	return xmlhttp;
}


function initSet(){

  if(!($('form[MESS_ENABLED]').checked)) {
	hideRowById('MESS_ENGINE');
    hideRowById('MESS_SERVER');
    hideRowById('MESS_PORT');
    hideRowById('MESS_ACCOUNT');
    hideRowById('MESS_PASSWORD');
    hideRowById('MESS_BACKGROUND');
    hideRowById('MESS_EXECUTE_EVERY');
    hideRowById('MESS_SEND_MAX');
    hideRowById('MESS_TRY_SEND_INMEDIATLY');
    hideRowById('TEST');
	$('form[SAVE_CHANGES]').disabled = false;
  }	
}

/* @#end *************************************  test Connectio Events ************************************/


leimnud.event.add(getField('MESS_ENABLED'), 'click', function() {
  if (this.checked) {
    showRowById('MESS_ENGINE');
    switch (getField('MESS_ENGINE').value) {
      case 'MAIL':
        hideRowById('MESS_SERVER');
        hideRowById('MESS_PORT');
        hideRowById('MESS_ACCOUNT');
        hideRowById('MESS_PASSWORD');
      break;
      case 'PHPMAILER':
      case 'OPENMAIL':
        showRowById('MESS_SERVER');
        showRowById('MESS_PORT');
        showRowById('MESS_ACCOUNT');
        showRowById('MESS_PASSWORD');
      break;
    }
    //showRowById('MESS_BACKGROUND');////enable this line in the next release
    if (getField('MESS_BACKGROUND').checked) {
      showRowById('MESS_EXECUTE_EVERY');
      showRowById('MESS_SEND_MAX');
      showRowById('MESS_TRY_SEND_INMEDIATLY');
    }
    else {
      hideRowById('MESS_EXECUTE_EVERY');
      hideRowById('MESS_SEND_MAX');
      hideRowById('MESS_TRY_SEND_INMEDIATLY');
    }
    showRowById('TEST');
	$('form[SAVE_CHANGES]').disabled = true;
  }
  else {
    hideRowById('MESS_ENGINE');
    hideRowById('MESS_SERVER');
    hideRowById('MESS_PORT');
    hideRowById('MESS_ACCOUNT');
    hideRowById('MESS_PASSWORD');
    hideRowById('MESS_BACKGROUND');
    hideRowById('MESS_EXECUTE_EVERY');
    hideRowById('MESS_SEND_MAX');
    hideRowById('MESS_TRY_SEND_INMEDIATLY');
    hideRowById('TEST');
	$('form[SAVE_CHANGES]').disabled = false;
  }
}.extend(getField('MESS_ENABLED')));

leimnud.event.add(getField('MESS_ENGINE'), 'change', function() {
  switch (this.value) {
    case 'MAIL':
      hideRowById('MESS_SERVER');
      hideRowById('MESS_PORT');
      hideRowById('MESS_ACCOUNT');
      hideRowById('MESS_PASSWORD');
    break;
    case 'PHPMAILER':
    case 'OPENMAIL':
      showRowById('MESS_SERVER');
      showRowById('MESS_PORT');
      showRowById('MESS_ACCOUNT');
      showRowById('MESS_PASSWORD');
    break;
  }
}.extend(getField('MESS_ENGINE')));

leimnud.event.add(getField('MESS_BACKGROUND'), 'click', function() {
  if (this.checked) {
    showRowById('MESS_EXECUTE_EVERY');
    showRowById('MESS_SEND_MAX');
    showRowById('MESS_TRY_SEND_INMEDIATLY');
  }
  else {
    hideRowById('MESS_EXECUTE_EVERY');
    hideRowById('MESS_SEND_MAX');
    hideRowById('MESS_TRY_SEND_INMEDIATLY');
  }
}.extend(getField('MESS_BACKGROUND')));

if (!getField('MESS_ENABLED').checked) {
  hideRowById('MESS_ENGINE');
  hideRowById('MESS_SERVER');
  hideRowById('MESS_PORT');
  hideRowById('MESS_ACCOUNT');
  hideRowById('MESS_PASSWORD');
  hideRowById('MESS_BACKGROUND');
  hideRowById('MESS_EXECUTE_EVERY');
  hideRowById('MESS_SEND_MAX');
  hideRowById('MESS_TRY_SEND_INMEDIATLY');
  hideRowById('TEST');
}

switch (getField('MESS_ENGINE').value) {
  case 'MAIL':
    hideRowById('MESS_SERVER');
    hideRowById('MESS_PORT');
    hideRowById('MESS_ACCOUNT');
    hideRowById('MESS_PASSWORD');
  break;
  case 'PHPMAILER':
  case 'OPENMAIL':
    showRowById('MESS_SERVER');
    showRowById('MESS_PORT');
    showRowById('MESS_ACCOUNT');
    showRowById('MESS_PASSWORD');
  break;
}

hideRowById('MESS_BACKGROUND');//delete this line in the next release
if (!getField('MESS_BACKGROUND').checked) {
  hideRowById('MESS_EXECUTE_EVERY');
  hideRowById('MESS_SEND_MAX');
  hideRowById('MESS_TRY_SEND_INMEDIATLY');
}

var verifyData = function(oForm) {
  if (getField('MESS_ENABLED').checked) {
	  switch (getField('MESS_ENGINE').value) {
	    case 'PHPMAILER':
	    case 'OPENMAIL':
	      oAux = getField('MESS_SERVER');
	      if (oAux.value == '') {
	        alert(G_STRINGS.ID_MESS_SERVER_REQUIRED);
	        oAux.focus();
	        return;
	      }
	    break;
	  }
	  if (getField('MESS_BACKGROUND').checked) {
	    oAux = getField('MESS_EXECUTE_EVERY');
	    if (oAux.value == '') {
	      alert(G_STRINGS.ID_MESS_EXECUTE_EVERY_REQUIRED);
	      oAux.focus();
	      return;
	    }
	    oAux = getField('MESS_SEND_MAX');
	    if (oAux.value == '') {
	      alert(G_STRINGS.ID_MESS_SEND_MAX_REQUIRED);
	      oAux.focus();
	      return;
	    }
	  }
	}
	oForm.submit();
};

var oPanel;

var testEmailConfiguration = function() {
  if (getField('MESS_ENGINE').value != 'MAIL') {
	  oAux = getField('MESS_SERVER');
	  if (oAux.value == '') {
	    alert(G_STRINGS.ID_MESS_SERVER_REQUIRED);
	    oAux.focus();
	    return;
	  }
	}
  oPanel = new leimnud.module.panel();
  oPanel.options = {
  	size	:{w:400,h:200},
  	position:{x:0,y:0,center:true},
  	title	:"",
  	theme	:"processmaker",
  	statusBar:false,
  	control	:{resize:false,roll:false,drag:false},
  	fx	:{modal:true,opacity:true,blinkToFront:false,fadeIn:false,drag:false}
  };
  oPanel.events = {
  	remove: function() { delete(oPanel); }.extend(this)
  };
  oPanel.make();
  oPanel.loader.show();
  var oRPC = new leimnud.module.rpc.xmlhttp({
  	url : 'emails_Ajax',
  	args: 'action=testEmailConfiguration'
  });
  oRPC.callback = function(rpc){
    oPanel.loader.hide();
  	oPanel.addContent(rpc.xmlhttp.responseText);
  	var scs = rpc.xmlhttp.responseText.extractScript();
  	scs.evalScript();
  }.extend(this);
  oRPC.make();
};

var closeTestPanel = function() {
  oPanel.remove();
};

initSet();

]]>
</JS>

</dynaForm>