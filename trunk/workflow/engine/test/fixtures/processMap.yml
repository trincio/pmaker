load1:
  -
    Title: "Obtain the processmap data"
    Function: "loadTest"
    Input:
      PRO_UID: "1"
    Output:
      Type: "string"
load2:
  -
    Title: "Obtain the processmap data (not existent)"
    Function: "loadTest"
    Input:
      PRO_UID: "111111111111"
    Output:
      Type: "Exception"
createProcess1:
  -
    Title: "Create a process"
    Function: "createProcessTest"
    Input:
      USR_UID: "1"
    Output:
      Type: "boolean"
updateProcess1:
  -
    Title: "Update a process"
    Function: "updateProcessTest"
    Input:
      PRO_UID:     "1"
      PRO_TITLE_X: 100
      PRO_TITLE_Y: 100
    Output:
      Type: "integer"
updateProcess2:
  -
    Title: "Update a process (not existent)"
    Function: "updateProcessTest"
    Input:
      PRO_UID:     "111111111111"
      PRO_TITLE_X: 100
      PRO_TITLE_Y: 100
    Output:
      Type: "Exception"
editProcess1:
  -
    Title: "Edit the process info"
    Function: "editProcessTest"
    Input:
      PRO_UID: "1"
    Output:
      Type: "boolean"
editProcess2:
  -
    Title: "Edit the process info (not existent)"
    Function: "editProcessTest"
    Input:
      PRO_UID: "111111111111"
    Output:
      Type: "Exception"
saveTitlePosition1:
  -
    Title: "Save the title position"
    Function: "saveTitlePositionTest"
    Input:
      PRO_UID: "1"
      PRO_X:   100
      PRO_Y:   100
    Output:
      Type: "boolean"
saveTitlePosition2:
  -
    Title: "Save the title position (not existent)"
    Function: "saveTitlePositionTest"
    Input:
      PRO_UID: "111111111111"
      PRO_X:   100
      PRO_Y:   100
    Output:
      Type: "Exception"
steps1:
  -
    Title: "Show the task steps"
    Function: "stepsTest"
    Input:
      PRO_UID: "1"
      TAS_UID: "1"
    Output:
      Type: "boolean"
steps2:
  -
    Title: "Show the task steps (not existent)"
    Function: "stepsTest"
    Input:
      PRO_UID: "111111111111"
      TAS_UID: "1"
    Output:
      Type: "Exception"
users1:
  -
    Title: "Show the task users"
    Function: "usersTest"
    Input:
      PRO_UID: "1"
      TAS_UID: "1"
    Output:
      Type: "boolean"
users2:
  -
    Title: "Show the task users (not existent)"
    Function: "usersTest"
    Input:
      PRO_UID: "111111111111"
      TAS_UID: "1"
    Output:
      Type: "Exception"
stepsConditions1:
  -
    Title: "Show the step conditions of the task"
    Function: "stepsConditionsTest"
    Input:
      PRO_UID: "1"
      TAS_UID: "1"
    Output:
      Type: "boolean"
stepsConditions2:
  -
    Title: "Show the step conditions of the task (not existent)"
    Function: "stepsConditionsTest"
    Input:
      PRO_UID: "111111111111"
      TAS_UID: "1"
    Output:
      Type: "Exception"
stepsTriggers1:
  -
    Title: "Show the step triggers of the task"
    Function: "stepsTriggersTest"
    Input:
      PRO_UID: "1"
      TAS_UID: "1"
    Output:
      Type: "boolean"
stepsTriggers2:
  -
    Title: "Show the step triggers of the task (not existent)"
    Function: "stepsTriggersTest"
    Input:
      PRO_UID: "111111111111"
      TAS_UID: "1"
    Output:
      Type: "Exception"
addTask1:
  -
    Title: "Add a task to process"
    Function: "addTaskTest"
    Input:
      PRO_UID: "1"
      TAS_X:   100
      TAS_Y:   100
    Output:
      Type: "boolean"
addTask2:
  -
    Title: "Add a task to process (not existent)"
    Function: "addTaskTest"
    Input:
      PRO_UID: "111111111111"
      TAS_X:   100
      TAS_Y:   100
    Output:
      Type: "Exception"
editTaskProperties1:
  -
    Title: "Edit the task properties"
    Function: "editTaskPropertiesTest"
    Input:
      TAS_UID: "1"
      iForm:   1
      iIndex:  0
    Output:
      Type: "boolean"
editTaskProperties2:
  -
    Title: "Edit the task properties (not existent)"
    Function: "editTaskPropertiesTest"
    Input:
      TAS_UID: "111111111111"
      iForm:   1
      iIndex:  0
    Output:
      Type: "Exception"
saveTaskPosition1:
  -
    Title: "Save the task position"
    Function: "saveTaskPositionTest"
    Input:
      TAS_UID: "1"
      TAS_X:   100
      TAS_Y:   100
    Output:
      Type: "integer"
saveTaskPosition2:
  -
    Title: "Save the task position (not existent)"
    Function: "saveTaskPositionTest"
    Input:
      TAS_UID: "111111111111"
      TAS_X:   100
      TAS_Y:   100
    Output:
      Type: "Exception"
deleteTask1:
  -
    Title: "Delete a task"
    Function: "deleteTaskTest"
    Input:
      TAS_UID: "1"
      TAS_X:   100
      TAS_Y:   100
    Output:
      Type: "boolean"
deleteTask2:
  -
    Title: "Delete a task (not existent)"
    Function: "deleteTaskTest"
    Input:
      TAS_UID: "111111111111"
      TAS_X:   100
      TAS_Y:   100
    Output:
      Type: "Exception"
addGuide1:
  -
    Title: "Add a new guide"
    Function: "addGuideTest"
    Input:
      PRO_UID:    "1"
      iPosition:  100
      sDirection: "vertical"
    Output:
      Type: "string"
addGuide2:
  -
    Title: "Add a new guide (not existent)"
    Function: "addGuideTest"
    Input:
      PRO_UID: "111111111111"
      iPosition:  100
      sDirection: "vertical"
    Output:
      Type: "Exception"
saveGuidePosition1:
  -
    Title: "Save de guide position"
    Function: "saveGuidePositionTest"
    Input:
      SWI_UID:    "1"
      iPosition:  100
      sDirection: "vertical"
    Output:
      Type: "integer"
saveGuidePosition2:
  -
    Title: "Save de guide position (not existent)"
    Function: "saveGuidePositionTest"
    Input:
      SWI_UID:    "111111111111"
      iPosition:  100
      sDirection: "vertical"
    Output:
      Type: "Exception"
deleteGuide1:
  -
    Title: "Delete a guide"
    Function: "deleteGuideTest"
    Input:
      SWI_UID: "1"
    Output:
      Type: "boolean"
deleteGuide2:
  -
    Title: "Delete a guide (not existent)"
    Function: "deleteGuideTest"
    Input:
      SWI_UID: "111111111111"
    Output:
      Type: "Exception"
deleteGuides1:
  -
    Title: "Delete all guides"
    Function: "deleteGuidesTest"
    Input:
      PRO_UID: "1"
    Output:
      Type: "boolean"
deleteGuides2:
  -
    Title: "Delete all guides (not existent)"
    Function: "deleteGuidesTest"
    Input:
      PRO_UID: "111111111111"
    Output:
      Type: "Exception"
updateText1:
  -
    Title: "Update a text"
    Function: "updateTextTest"
    Input:
      SWI_UID:  "1"
      SWI_TEXT: "text1"
    Output:
      Type: "integer"
updateText2:
  -
    Title: "Update a text (not existent)"
    Function: "updateTextTest"
    Input:
      SWI_UID:  "111111111111"
      SWI_TEXT: "text1"
    Output:
      Type: "Exception"
saveTextPosition1:
  -
    Title: "Update a text position"
    Function: "saveTextPositionTest"
    Input:
      SWI_UID: "1"
      SWI_X:   100
      SWI_Y:   100
    Output:
      Type: "integer"
saveTextPosition2:
  -
    Title: "Update a text position (not existent)"
    Function: "saveTextPositionTest"
    Input:
      SWI_UID:  "111111111111"
      SWI_X:   100
      SWI_Y:   100
    Output:
      Type: "Exception"
deleteText1:
  -
    Title: "Delete a text"
    Function: "deleteTextTest"
    Input:
      SWI_UID: "2"
    Output:
      Type: "boolean"
deleteText2:
  -
    Title: "Delete a text (not existent)"
    Function: "deleteTextTest"
    Input:
      SWI_UID:  "111111111111"
    Output:
      Type: "Exception"
dynaformsList1:
  -
    Title: "Show the dynaforms list"
    Function: "dynaformsListTest"
    Input:
      PRO_UID: "1"
    Output:
      Type: "boolean"
dynaformsList2:
  -
    Title: "Show the dynaforms list (not existent)"
    Function: "dynaformsListTest"
    Input:
      PRO_UID:  "111111111111"
    Output:
      Type: "Exception"
outputdocsList1:
  -
    Title: "Show the output documents list"
    Function: "outputdocsListTest"
    Input:
      PRO_UID: "1"
    Output:
      Type: "boolean"
outputdocsList2:
  -
    Title: "Show the output documents list (not existent)"
    Function: "outputdocsListTest"
    Input:
      PRO_UID:  "111111111111"
    Output:
      Type: "Exception"
inputdocsList1:
  -
    Title: "Show the input documents list"
    Function: "inputdocsListTest"
    Input:
      PRO_UID: "1"
    Output:
      Type: "boolean"
inputdocsList2:
  -
    Title: "Show the input documents list (not existent)"
    Function: "inputdocsListTest"
    Input:
      PRO_UID:  "111111111111"
    Output:
      Type: "Exception"
triggersList1:
  -
    Title: "Show the triggers list"
    Function: "triggersListTest"
    Input:
      PRO_UID: "1"
    Output:
      Type: "boolean"
triggersList2:
  -
    Title: "Show the triggers list (not existent)"
    Function: "triggersListTest"
    Input:
      PRO_UID:  "111111111111"
    Output:
      Type: "Exception"
messagesList1:
  -
    Title: "Show the messages list"
    Function: "messagesListTest"
    Input:
      PRO_UID: "1"
    Output:
      Type: "boolean"
messagesList2:
  -
    Title: "Show the messages list (not existent)"
    Function: "messagesListTest"
    Input:
      PRO_UID:  "111111111111"
    Output:
      Type: "Exception"
currentPattern1:
  -
    Title: "Show the current pattern"
    Function: "currentPatternTest"
    Input:
      PRO_UID: "1"
      TAS_UID: "1"
    Output:
      Type: "boolean"
currentPattern2:
  -
    Title: "Show the current pattern (not existent)"
    Function: "currentPatternTest"
    Input:
      PRO_UID:  "111111111111"
      TAS_UID: "1"
    Output:
      Type: "Exception"
newPattern1:
  -
    Title: "New pattern"
    Function: "newPatternTest"
    Input:
      PRO_UID:       "1"
      TAS_UID:       "1"
      ROU_NEXT_TASK: "2"
      ROU_TYPE:      "SEQUENTIAL"
    Output:
      Type: "boolean"
newPattern2:
  -
    Title: "New pattern (not existent)"
    Function: "newPatternTest"
    Input:
      PRO_UID:  "111111111111"
      TAS_UID: "1"
      ROU_NEXT_TASK: "2"
      ROU_TYPE:      "SEQUENTIAL"
    Output:
      Type: "Exception"
deleteDerivation1:
  -
    Title: "Delete a derivation rule"
    Function: "deleteDerivationTest"
    Input:
      TAS_UID: "1"
    Output:
      Type: "boolean"
deleteDerivation2:
  -
    Title: "Delete a derivation rule (not existent)"
    Function: "deleteDerivationTest"
    Input:
      TAS_UID: "111111111111"
    Output:
      Type: "Exception"
